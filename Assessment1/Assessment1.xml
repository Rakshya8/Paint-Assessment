<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assessment1</name>
    </assembly>
    <members>
        <member name="T:Assessment1.Check_Valid_Commands">
            <summary>
            Check if given commands are valid
            </summary>
        </member>
        <member name="M:Assessment1.Check_Valid_Commands.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Assessment1.Check_Valid_Commands.#ctor(Assessment1.Form1)">
            <summary>
            Constructor with form object as parameter
            </summary>
            <param name="frm">Object of Form1</param>
        </member>
        <member name="M:Assessment1.Check_Valid_Commands.Valid_execute_command(System.String)">
            <summary>
            Check for valid execution commands
            </summary>
            <param name="command">executing command</param>
            <returns>true if valid and false if invalid</returns>
        </member>
        <member name="M:Assessment1.Check_Valid_Commands.Check_command(System.String)">
            <summary>
            Check for valid program commands
            </summary>
            <param name="command">program commands</param>
            <returns>true if valid and false if invalid</returns>
        </member>
        <member name="M:Assessment1.Check_Valid_Commands.error_list">
            <summary>
            Stores list of errors found during command validation
            </summary>
            <returns>returns list of errors</returns>
        </member>
        <member name="T:Assessment1.Polygon">
            <summary>
            Class Circle inherits base class Shape
            </summary>
        </member>
        <member name="M:Assessment1.Polygon.#ctor">
            <summary>
            Call base class constructor
            </summary>
        </member>
        <member name="M:Assessment1.Polygon.#ctor(System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Overloading Constructor and call overloaded base constructor
            </summary>
            <param name="color">Color Of Pen</param>
            <param name="fillshape">Inner Fill Shapes</param>
            <param name="x">X-axis Coordinate</param>
            <param name="y">Y-axis Coordinate</param>
            <param name="points">polygon points</param>
        </member>
        <member name="M:Assessment1.Polygon.Set(System.Drawing.Color,System.Boolean,System.Int32[])">
            <summary>
            New implementation of Set method that is inherited from a base class.
            </summary>
            <param name="colour">Color of pen</param>
            <param name="fill">Inner fill shapes</param>
            <param name="list">stores number of arguments</param>
        </member>
        <member name="M:Assessment1.Polygon.Draw(System.Drawing.Graphics)">
            <summary>
            New implementation of Draw method that is inherited from a base class.
            </summary>
            <param name="g">GDi+ Drawing surface</param>
        </member>
        <member name="T:Assessment1.Shape">
            <summary>
            Abstract class Shape which declares the factory method
            </summary>
        </member>
        <member name="M:Assessment1.Shape.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Assessment1.Shape.#ctor(System.Drawing.Color,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Overloading constructor with parameters
            </summary>
            <param name="colour">Color Of Pen</param>
            <param name="fillshape">Inner Fill Shapes</param>
            <param name="x">X-axis Coordinate</param>
            <param name="y">Y-axis Coordinate</param>
        </member>
        <member name="M:Assessment1.Shape.Draw(System.Drawing.Graphics)">
            <summary>
            Draw shape on panel
            </summary>
            <param name="g">GDI+ Drawing Surface</param>
        </member>
        <member name="M:Assessment1.Shape.Set(System.Drawing.Color,System.Boolean,System.Int32[])">
            <summary>
            Override set method derived from base class
            </summary>
            <param name="colour">Color of pen</param>
            <param name="fillshape">Inner fill shapes</param>
            <param name="list">stores number of arguments</param>
        </member>
        <member name="T:Assessment1.Circle">
            <summary>
            Class Circle inherits base class Shape
            </summary>
        </member>
        <member name="M:Assessment1.Circle.#ctor">
            <summary>
            Call base class constructor
            </summary>
        </member>
        <member name="M:Assessment1.Circle.#ctor(System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overloading Constructor and call overloaded base constructor
            </summary>
            <param name="color">Color Of Pen</param>
            <param name="fillshape">Inner Fill Shapes</param>
            <param name="x">X-axis Coordinate</param>
            <param name="y">Y-axis Coordinate</param>
            <param name="radius">Radius Of Circle</param>
        </member>
        <member name="M:Assessment1.Circle.Set(System.Drawing.Color,System.Boolean,System.Int32[])">
            <summary>
            New implementation of Set method that is inherited from a base class.
            </summary>
            <param name="colour">Color of pen</param>
            <param name="fill">Inner fill shapes</param>
            <param name="list">stores number of arguments</param>
        </member>
        <member name="M:Assessment1.Circle.Draw(System.Drawing.Graphics)">
            <summary>
            New implementation of Draw method that is inherited from a base class.
            </summary>
            <param name="g">GDi+ Drawing surface</param>
        </member>
        <member name="T:Assessment1.Form1">
            <summary>
            Form1 class inherits from the base class Form
            </summary>
        </member>
        <member name="M:Assessment1.Form1.#ctor">
            <summary>
            Default Constructor to instantiate values of form
            </summary>
        </member>
        <member name="M:Assessment1.Form1.textBox3_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Event triggered on pressing any key while focused on this textbox
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.panel1_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint Event of panel1
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.saveToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Opens a save dialog to save commands into a text format document
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.loadToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Opens a open dialog to read text file and show commands
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.commandListToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows list of program commands available
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.colorListToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows list of color options available
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.shapeListToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows list of shapes commands available
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.actionListToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows list of executing commands available
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="M:Assessment1.Form1.textBox2_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Indicates that the event handler has already processed the event and dealt with it, so it doesn't need to be processed any further.
            Disables user input for this textbox.
            </summary>
            <param name="sender">contains a reference to the control/object that raised the event.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="F:Assessment1.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Assessment1.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Assessment1.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Assessment1.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:Assessment1.Rectangle">
            <summary>
            Class Rectangle inherits base class Shape
            </summary>
        </member>
        <member name="M:Assessment1.Rectangle.#ctor">
            <summary>
            Call base class constructor
            </summary>
        </member>
        <member name="M:Assessment1.Rectangle.#ctor(System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overloading Constructor and call overloaded base constructor
            </summary>
            <param name="color">Color Of Pen</param>
            <param name="fillshape">Inner Fill Shapes</param>
            <param name="x">X-axis Coordinate</param>
            <param name="y">Y-axis Coordinate</param>
            <param name="length">Length of Rectangle</param>
            <param name="width">Width of Rectangle</param>
        </member>
        <member name="M:Assessment1.Rectangle.Set(System.Drawing.Color,System.Boolean,System.Int32[])">
            <summary>
            New implementation of Set method that is inherited from a base class.
            </summary>
            <param name="color">Color of pen</param>
            <param name="fill">Inner fill shapes</param>
            <param name="list">stores number of arguments</param>
        </member>
        <member name="M:Assessment1.Rectangle.Draw(System.Drawing.Graphics)">
            <summary>
            New implementation of Draw method that is inherited from a base class.
            </summary>
            <param name="g">GDi+ Drawing surface</param>
        </member>
        <member name="T:Assessment1.ShapeFactory">
            <summary>
            Class ShapeFactory controls the type of shape object to create
            </summary>
        </member>
        <member name="M:Assessment1.ShapeFactory.getShape(System.String)">
            <summary>
            check user requirement for shape and return that shape
            </summary>
            <param name="shapeType">Shape of object</param>
            <returns>type of shape required</returns>
        </member>
        <member name="T:Assessment1.IShapes">
            <summary>
            The Shape interface
            </summary>
        </member>
        <member name="M:Assessment1.IShapes.Set(System.Drawing.Color,System.Boolean,System.Int32[])">
            <summary>
            Set properties of shape
            </summary>
            <param name="c">Color of pen</param>
            <param name="fillshape">Inner fill shapes</param>
            <param name="list">stores number of arguments</param>
        </member>
        <member name="M:Assessment1.IShapes.Draw(System.Drawing.Graphics)">
            <summary>
            Draw shape in panel
            </summary>
            <param name="g">GDI+ Drawing Surface</param>
        </member>
        <member name="T:Assessment1.Triangle">
            <summary>
            Class Traingle inherits base class Shape
            </summary>
        </member>
        <member name="M:Assessment1.Triangle.#ctor">
            <summary>
            Call base class constructor
            </summary>
        </member>
        <member name="M:Assessment1.Triangle.#ctor(System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overloading Constructor and call overloaded base constructor
            </summary>
            <param name="color">Color Of Pen</param>
            <param name="fillshape">Inner Fill Shapes</param>
            <param name="x">X-axis Coordinate</param>
            <param name="y">Y-axis Coordinate</param>
            <param name="a">Side1 of Traingle</param>
            <param name="b">Side2 of Traingle</param>
            <param name="c">Side3 of Traingle</param>
        </member>
        <member name="M:Assessment1.Triangle.Set(System.Drawing.Color,System.Boolean,System.Int32[])">
            <summary>
            New implementation of Set method that is inherited from a base class.
            </summary>
            <param name="colour">Color of pen</param>
            <param name="fill">Inner fill shapes</param>
            <param name="list">stores number of arguments</param>
        </member>
        <member name="M:Assessment1.Triangle.Draw(System.Drawing.Graphics)">
            <summary>
            New implementation of Draw method that is inherited from a base class.
            </summary>
            <param name="g">GDi+ Drawing surface</param>
        </member>
        <member name="T:Assessment1.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Assessment1.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Assessment1.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
